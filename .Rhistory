sig.ra$rownames.physeq.f.ra.<-as.factor(sig.ra$rownames.physeq.f.ra.) #making sure/setting progression to(or whatever you chose to merge_samples() by) the factor format, R freaks out otherwise
pcm = melt(sig.ra, id = c("rownames.physeq.f.ra.")) #convert data frame from a "wide" format to a "long" format
pcm$rownames.physeq.f.ra. <- factor(pcm$rownames.physeq.f.ra.,levels=unique(pcm$rownames.physeq.f.ra.))
#pcm$Sample_ID <- factor(pcm$Sample_ID,levels=unique(pcm$Sample_ID))
length(levels(factor(pcm$rownames.physeq.f.ra.)))
colors <- c("red","yellow","green","cyan","black","red3","yellow3","green3","cyan3")
names(colors)<-levels(factor(pcm$rownames.physeq.f.ra.))
colors
xx = ggplot(pcm, aes(x = rownames.physeq.f.ra., y = variable,fill=rownames.physeq.f.ra.)) + geom_point(aes(size = as.numeric(value)), alpha = 0.75, shape = 21) + scale_fill_manual(values = colors,limits = levels(pcm$rownames.physeq.f.ra.)) +  scale_size_continuous(limits = c(0.000001, 100), range = c(.5,10), breaks = c(1,25,50,75)) +  labs( x= "", y = "", size = "Abundance", fill = "")  +  theme(legend.key=element_blank(), axis.text.x = element_text(colour = "black", size = 12, face = "bold", angle = 90, vjust = 0.3, hjust = 1), axis.text.y = element_text(colour = "black", face = "bold", size = 11), legend.text = element_text(size = 10, face ="bold", colour ="black"), legend.title = element_text(size = 12, face = "bold"), panel.background = element_blank(), panel.border = element_rect(colour = "black", fill = NA, size = 1.2), legend.position = "right") + scale_y_discrete(limits = rev(levels(pcm$variable))) + ggtitle("Mcav Mcav Significant Taxa") + theme(axis.text.y = element_blank())
xx
#ggsave("bubbleplot.tiff", plot = xx, width = 15, height = 15, units = "cm", dpi = 300)
physeq.f<-filter_taxa(ps, function(x) sum(x >= 100) > (0.01*length(x)), prune = TRUE) #filter out super small numbers, psofav is the phyloseq object with all of the ofav-mcav data
ps1<-merge_samples(physeq.f,"Progression") #avg data and combine so that there is 1 avg'd value for each progression point, fill in with what your x-axis is if you want 1 value for each unique type (i.e. 1 for control50 and 1 for diseased50 etc)
physeq.f.ra <- transform_sample_counts(ps1, function(x) x*100/sum(x)) #transform to relative abundance from raw abundance
#data.frame(tax_table(physeq.f.ra))
ps_difabund<-subset_taxa(physeq.f.ra, rownames(tax_table(physeq.f.ra)) %in% dif.abund.tax$taxa_id)
rowSums(otu_table(physeq.f.ra)) #making sure it worked by getting the sums of each row, should all be 100
physeq.f.ra.ord <- tax_glom(ps_difabund, "Order",NArm=FALSE)
propData <- as.data.frame((otu_table(physeq.f.ra.ord))) #make relative abundance otu into a dataframe
plotDF1 <- propData %>%
rownames_to_column(var="taxa") %>%
melt() %>%
magrittr::set_names(c("sample", "taxa", "relab"))
head(plotDF1)#just checking it worked
taxonomy.2 <- tax_table(physeq.f) %>%
as.data.frame() %>%
rownames_to_column(var="taxa")
head(taxonomy.2)#just checking it worked
head(plotDF1)#just checking it worked
plotDF1 <- left_join(plotDF1, taxonomy.2, by="taxa") %>%
select(taxa, sample, relab, Order) #would need to update here too if you change it.
head(plotDF1)#just checking it worked
sampdata<-data.frame(sample_data(physeq.f))
metadata.2 <- sampdata %>%
rownames_to_column(var="sample")
metadata.2
plotDF1 <- left_join(plotDF1, metadata.2, by="sample")
head(plotDF1)#just checking it worked
length(levels(factor(plotDF1$Order)))
plotDF1$Order<-factor(plotDF1$Order)
plotDF1$sample<-factor(plotDF1$sample)
plotDF1$sample<-as.factor(plotDF1$sample)
#pcm = melt(plotDF1, id = c("rownames.physeq.f.ra.")) #convert data frame from a "wide" format to a "long" format
length(levels(factor(plotDF1$sample))) #check the length of what you want to set the colors by, in this case Progression, can set to anything in your data
colors <- c("red","yellow","green","cyan","black","red3","yellow3","green3","cyan3") #make list of R colors (be careful to spell and capitalize the way R does for its built in colors), should be the same amount as the number from line of code above
names(colors)<-levels(factor(plotDF1$sample)) #set colors to their associated variable levels (i.e. control05, diseased05, etc.)
colors #checking it worked
bubbleorder = ggplot(plotDF1, aes(x = sample, y = Order, fill=sample)) + geom_point(aes(size = as.numeric(relab)), alpha = 0.75, shape = 21) + scale_fill_manual(values = colors,limits = levels(plotDF1$sample)) + scale_size_continuous(limits = c(0.000001, 100), range = c(.5,10), breaks = c(1,25,50,75)) +  labs( x= "", y = "", size = "Abundance", fill = "")  +  theme(legend.key=element_blank(), axis.text.x = element_text(colour = "black", size = 12, face = "bold", angle = 90, vjust = 0.3, hjust = 1), axis.text.y = element_text(colour = "black", face = "bold", size = 8), legend.text = element_text(size = 10, face ="bold", colour ="black"), legend.title = element_text(size = 12, face = "bold"), panel.background = element_blank(), panel.border = element_rect(colour = "black", fill = NA, size = 1.2), legend.position = "right") + scale_y_discrete(limits = rev(levels(plotDF1$Order))) + ggtitle("Mcav Mcav Significant Taxa by Order") #making graph, be sure to go through and change anything whose name changed from what it originally was in this code
bubbleorder #print plot
physeq.f<-filter_taxa(ps, function(x) sum(x >= 100) > (0.01*length(x)), prune = TRUE) #filter out super small numbers, psofav is the phyloseq object with all of the ofav-mcav data
ps1<-merge_samples(physeq.f,"Progression") #avg data and combine so that there is 1 avg'd value for each progression point, fill in with what your x-axis is if you want 1 value for each unique type (i.e. 1 for control50 and 1 for diseased50 etc)
physeq.f.ra <- transform_sample_counts(ps1, function(x) x*100/sum(x)) #transform to relative abundance from raw abundance
#data.frame(tax_table(physeq.f.ra))
ps_difabund<-subset_taxa(physeq.f.ra, rownames(tax_table(physeq.f.ra)) %in% dif.abund.tax$taxa_id)
rowSums(otu_table(physeq.f.ra)) #making sure it worked by getting the sums of each row, should all be 100
physeq.f.ra.ord <- tax_glom(ps_difabund, "Family",NArm=FALSE)
propData <- as.data.frame((otu_table(physeq.f.ra.ord))) #make relative abundance otu into a dataframe
plotDF1 <- propData %>%
rownames_to_column(var="taxa") %>%
melt() %>%
magrittr::set_names(c("sample", "taxa", "relab"))
head(plotDF1)#just checking it worked
taxonomy.2 <- tax_table(physeq.f) %>%
as.data.frame() %>%
rownames_to_column(var="taxa")
head(taxonomy.2)#just checking it worked
head(plotDF1)#just checking it worked
plotDF1 <- left_join(plotDF1, taxonomy.2, by="taxa") %>%
select(taxa, sample, relab, Family) #would need to update here too if you change it.
head(plotDF1)#just checking it worked
sampdata<-data.frame(sample_data(physeq.f))
metadata.2 <- sampdata %>%
rownames_to_column(var="sample")
metadata.2
plotDF1 <- left_join(plotDF1, metadata.2, by="sample")
head(plotDF1)#just checking it worked
length(levels(factor(plotDF1$Family)))
plotDF1$Family<-factor(plotDF1$Family)
plotDF1$sample<-factor(plotDF1$sample)
plotDF1$sample<-as.factor(plotDF1$sample)
length(levels(factor(plotDF1$sample))) #check the length of what you want to set the colors by, in this case Progression, can set to anything in your data
colors <- c("red","yellow","green","cyan","black","red3","yellow3","green3","cyan3") #make list of R colors (be careful to spell and capitalize the way R does for its built in colors), should be the same amount as the number from line of code above
names(colors)<-levels(factor(plotDF1$sample)) #set colors to their associated variable levels (i.e. control05, diseased05, etc.)
colors #checking it worked
bubblefamily = ggplot(plotDF1, aes(x = sample, y = Family, fill=sample)) + geom_point(aes(size = as.numeric(relab)), alpha = 0.75, shape = 21) + scale_fill_manual(values = colors,limits = levels(plotDF1$sample)) + scale_size_continuous(limits = c(0.000001, 100), range = c(.5,10), breaks = c(1,25,50,75)) +  labs( x= "", y = "", size = "Abundance", fill = "")  +  theme(legend.key=element_blank(), axis.text.x = element_text(colour = "black", size = 12, face = "bold", angle = 90, vjust = 0.3, hjust = 1), axis.text.y = element_text(colour = "black", face = "bold", size = 6), legend.text = element_text(size = 10, face ="bold", colour ="black"), legend.title = element_text(size = 12, face = "bold"), panel.background = element_blank(), panel.border = element_rect(colour = "black", fill = NA, size = 1.2), legend.position = "right") + scale_y_discrete(limits = rev(levels(plotDF1$Family))) + ggtitle("Mcav Mcav Significant Taxa by Family") #making graph, be sure to go through and change anything whose name changed from what it originally was in this code
bubblefamily #print plot
physeq.f<-filter_taxa(psofav, function(x) sum(x >= 100) > (0.01*length(x)), prune = TRUE) #filter out super small numbers, psofav is the phyloseq object with all of the ofav-mcav data
ps1<-merge_samples(physeq.f,"Progression") #avg data and combine so that there is 1 avg'd value for each progression point, fill in with what your x-axis is if you want 1 value for each unique type (i.e. 1 for control50 and 1 for diseased50 etc)
o<-otu_table(ps1) #make otu table
physeq.f.ra <- transform_sample_counts(o, function(x) x*100/sum(x)) #transform to relative abundance from raw abundance
rowSums(otu_table(physeq.f.ra)) #making sure it worked by getting the sums of each row, should all be 100
propData <- as.data.frame((otu_table(physeq.f.ra))) #make relative abundance otu into a dataframe
sig.ra<-propData[,colnames(propData) %in% dif.abund.tax.ofav$taxa_id] #subset relative abundance so it only includes the significant otus
sig.ra <- cbind(data.frame(rownames(physeq.f.ra)),sig.ra) #add in progression names (or whatever you chose to merge_samples() by)
sig.ra #checking it works
sig.ra$rownames.physeq.f.ra.<-as.factor(sig.ra$rownames.physeq.f.ra.) #making sure/setting progression to(or whatever you chose to merge_samples() by) the factor format, R freaks out otherwise
pcm = melt(sig.ra, id = c("rownames.physeq.f.ra.")) #convert data frame from a "wide" format to a "long" format
length(levels(factor(pcm$rownames.physeq.f.ra.))) #check the length of what you want to set the colors by, in this case Progression, can set to anything in your data
colors <- c("red","yellow","green","cyan","black","red3","yellow3","green3","cyan3") #make list of R colors (be careful to spell and capitalize the way R does for its built in colors), should be the same amount as the number from line of code above
names(colors)<-levels(factor(pcm$rownames.physeq.f.ra.)) #set colors to their associated variable levels (i.e. control05, diseased05, etc.)
colors #checking it worked
pcm$rownames.physeq.f.ra. <- factor(pcm$rownames.physeq.f.ra.,levels=unique(pcm$rownames.physeq.f.ra.)) #should be set to whatever you merge_samples() by
xx2 = ggplot(pcm, aes(x = rownames.physeq.f.ra., y = variable,fill=rownames.physeq.f.ra.)) + geom_point(aes(size = as.numeric(value)), alpha = 0.75, shape = 21) + scale_fill_manual(values = colors,limits = levels(pcm$rownames.physeq.f.ra.)) + scale_size_continuous(limits = c(0.000001, 100), range = c(.5,10), breaks = c(1,25,50,75)) +  labs( x= "", y = "", size = "Abundance", fill = "")  +  theme(legend.key=element_blank(), axis.text.x = element_text(colour = "black", size = 12, face = "bold", angle = 90, vjust = 0.3, hjust = 1), axis.text.y = element_text(colour = "black", face = "bold", size = 11), legend.text = element_text(size = 10, face ="bold", colour ="black"), legend.title = element_text(size = 12, face = "bold"), panel.background = element_blank(), panel.border = element_rect(colour = "black", fill = NA, size = 1.2), legend.position = "right") + scale_y_discrete(limits = rev(levels(pcm$variable))) + ggtitle("Ofav Mcav Significant Taxa") + theme(axis.text.y = element_blank()) #making graph, be sure to go through and change anything whose name changed from what it originally was in this code
xx2 #print plot
#ggsave("bubbleplotofav.png", plot = xx2, width = 15, height = 15, units = "cm", dpi = 300) #save plot, if too squished (i.e. bubbles overlapping etc.) on x axis, then adjust width value, if too squished on y axis then adjust height
physeq.f<-filter_taxa(psofav, function(x) sum(x >= 100) > (0.01*length(x)), prune = TRUE) #filter out super small numbers, psofav is the phyloseq object with all of the ofav-mcav data
ps1<-merge_samples(physeq.f,"Progression") #avg data and combine so that there is 1 avg'd value for each progression point, fill in with what your x-axis is if you want 1 value for each unique type (i.e. 1 for control50 and 1 for diseased50 etc)
physeq.f.ra <- transform_sample_counts(ps1, function(x) x*100/sum(x)) #transform to relative abundance from raw abundance
#data.frame(tax_table(physeq.f.ra))
ps_difabund<-subset_taxa(physeq.f.ra, rownames(tax_table(physeq.f.ra)) %in% dif.abund.tax.ofav$taxa_id)
rowSums(otu_table(physeq.f.ra)) #making sure it worked by getting the sums of each row, should all be 100
physeq.f.ra.ord <- tax_glom(ps_difabund, "Order",NArm=FALSE)
propData <- as.data.frame((otu_table(physeq.f.ra.ord))) #make relative abundance otu into a dataframe
plotDF1 <- propData %>%
rownames_to_column(var="taxa") %>%
melt() %>%
magrittr::set_names(c("sample", "taxa", "relab"))
head(plotDF1)#just checking it worked
taxonomy.2 <- tax_table(physeq.f) %>%
as.data.frame() %>%
rownames_to_column(var="taxa")
head(taxonomy.2)#just checking it worked
head(plotDF1)#just checking it worked
plotDF1 <- left_join(plotDF1, taxonomy.2, by="taxa") %>%
select(taxa, sample, relab, Order) #would need to update here too if you change it.
head(plotDF1)#just checking it worked
sampdata<-data.frame(sample_data(physeq.f))
metadata.2 <- sampdata %>%
rownames_to_column(var="sample")
metadata.2
plotDF1 <- left_join(plotDF1, metadata.2, by="sample")
head(plotDF1)#just checking it worked
length(levels(factor(plotDF1$Order)))
plotDF1$Order<-factor(plotDF1$Order)
plotDF1$sample<-factor(plotDF1$sample)
plotDF1$sample<-as.factor(plotDF1$sample)
#pcm = melt(plotDF1, id = c("rownames.physeq.f.ra.")) #convert data frame from a "wide" format to a "long" format
length(levels(factor(plotDF1$sample))) #check the length of what you want to set the colors by, in this case Progression, can set to anything in your data
colors <- c("red","yellow","green","cyan","black","red3","yellow3","green3","cyan3") #make list of R colors (be careful to spell and capitalize the way R does for its built in colors), should be the same amount as the number from line of code above
names(colors)<-levels(factor(plotDF1$sample)) #set colors to their associated variable levels (i.e. control05, diseased05, etc.)
colors #checking it worked
bubbleorder = ggplot(plotDF1, aes(x = sample, y = Order, fill=sample)) + geom_point(aes(size = as.numeric(relab)), alpha = 0.75, shape = 21) + scale_fill_manual(values = colors,limits = levels(plotDF1$sample)) + scale_size_continuous(limits = c(0.000001, 100), range = c(.5,10), breaks = c(1,25,50,75)) +  labs( x= "", y = "", size = "Abundance", fill = "")  +  theme(legend.key=element_blank(), axis.text.x = element_text(colour = "black", size = 12, face = "bold", angle = 90, vjust = 0.3, hjust = 1), axis.text.y = element_text(colour = "black", face = "bold", size = 8), legend.text = element_text(size = 10, face ="bold", colour ="black"), legend.title = element_text(size = 12, face = "bold"), panel.background = element_blank(), panel.border = element_rect(colour = "black", fill = NA, size = 1.2), legend.position = "right") + scale_y_discrete(limits = rev(levels(plotDF1$Order))) + ggtitle("Ofav Mcav Significant Taxa by Order") #making graph, be sure to go through and change anything whose name changed from what it originally was in this code
bubbleorder #print plot
physeq.f<-filter_taxa(psofav, function(x) sum(x >= 100) > (0.01*length(x)), prune = TRUE) #filter out super small numbers, psofav is the phyloseq object with all of the ofav-mcav data
ps1<-merge_samples(physeq.f,"Progression") #avg data and combine so that there is 1 avg'd value for each progression point, fill in with what your x-axis is if you want 1 value for each unique type (i.e. 1 for control50 and 1 for diseased50 etc)
physeq.f.ra <- transform_sample_counts(ps1, function(x) x*100/sum(x)) #transform to relative abundance from raw abundance
#data.frame(tax_table(physeq.f.ra))
ps_difabund<-subset_taxa(physeq.f.ra, rownames(tax_table(physeq.f.ra)) %in% dif.abund.tax.ofav$taxa_id)
rowSums(otu_table(physeq.f.ra)) #making sure it worked by getting the sums of each row, should all be 100
physeq.f.ra.ord <- tax_glom(ps_difabund, "Family",NArm=FALSE)
propData <- as.data.frame((otu_table(physeq.f.ra.ord))) #make relative abundance otu into a dataframe
plotDF1 <- propData %>%
rownames_to_column(var="taxa") %>%
melt() %>%
magrittr::set_names(c("sample", "taxa", "relab"))
head(plotDF1)#just checking it worked
taxonomy.2 <- tax_table(physeq.f) %>%
as.data.frame() %>%
rownames_to_column(var="taxa")
head(taxonomy.2)#just checking it worked
head(plotDF1)#just checking it worked
plotDF1 <- left_join(plotDF1, taxonomy.2, by="taxa") %>%
select(taxa, sample, relab, Family) #would need to update here too if you change it.
head(plotDF1)#just checking it worked
sampdata<-data.frame(sample_data(physeq.f))
metadata.2 <- sampdata %>%
rownames_to_column(var="sample")
metadata.2
plotDF1 <- left_join(plotDF1, metadata.2, by="sample")
head(plotDF1)#just checking it worked
length(levels(factor(plotDF1$Family)))
plotDF1$Family<-factor(plotDF1$Family)
plotDF1$sample<-factor(plotDF1$sample)
plotDF1$sample<-as.factor(plotDF1$sample)
length(levels(factor(plotDF1$sample))) #check the length of what you want to set the colors by, in this case Progression, can set to anything in your data
colors <- c("red","yellow","green","cyan","black","red3","yellow3","green3","cyan3") #make list of R colors (be careful to spell and capitalize the way R does for its built in colors), should be the same amount as the number from line of code above
names(colors)<-levels(factor(plotDF1$sample)) #set colors to their associated variable levels (i.e. control05, diseased05, etc.)
colors #checking it worked
bubblefamily = ggplot(plotDF1, aes(x = sample, y = Family, fill=sample)) + geom_point(aes(size = as.numeric(relab)), alpha = 0.75, shape = 21) + scale_fill_manual(values = colors,limits = levels(plotDF1$sample)) + scale_size_continuous(limits = c(0.000001, 100), range = c(.5,10), breaks = c(1,25,50,75)) +  labs( x= "", y = "", size = "Abundance", fill = "")  +  theme(legend.key=element_blank(), axis.text.x = element_text(colour = "black", size = 12, face = "bold", angle = 90, vjust = 0.3, hjust = 1), axis.text.y = element_text(colour = "black", face = "bold", size = 6), legend.text = element_text(size = 10, face ="bold", colour ="black"), legend.title = element_text(size = 12, face = "bold"), panel.background = element_blank(), panel.border = element_rect(colour = "black", fill = NA, size = 1.2), legend.position = "right") + scale_y_discrete(limits = rev(levels(plotDF1$Family))) + ggtitle("Ofav Mcav Significant Taxa by Family") #making graph, be sure to go through and change anything whose name changed from what it originally was in this code
bubblefamily #print plot
dim(otu_table(ps_sctld)) #check your rows and columns
#[1]   87 7170; here samples are rows, so we need to transform it
otu.df<-t(data.frame(otu_table(ps_sctld)))
dim(otu.df)
meta_data<-data.frame(sample_data(ps_sctld))
meta_data$Sample.ID<-rownames(meta_data)
#[1] 7170   87; now we're good
#set up for pre-processing function
group_var = NULL
out_cut = 0.05
zero_cut = 0.90
lib_cut = 1000
neg_lb = FALSE
prepro<-feature_table_pre_process(otu.df,meta_data,sample_var="Sample.ID",group_var, out_cut, zero_cut, lib_cut, neg_1b)
prepro
feature_table <- prepro$feature_table # Preprocessed feature table
meta_data <- prepro$meta_data # Preprocessed metadata
struc_zero <- prepro$structure_zeros # Structural zero info
main_var = "Experiment"
p_adj_method = "BH"
alpha = 0.05
adj_formula = NULL
rand_formula = NULL
t_start = Sys.time()
ressctld = ANCOM(feature_table, meta_data, struc_zero, main_var, p_adj_method, alpha, adj_formula, rand_formula)
t_end = Sys.time()
t_run = t_end - t_start
dif.abund.tax.sctld<-ressctld$out[ressctld$out$detected_0.7==TRUE,]
dif.abund.tax.sctld
taxsubsctld<-subset_taxa(ps_sctld,rownames(tax_table(ps_sctld)) %in% dif.abund.tax.sctld$taxa_id)
taxdfsctld<-data.frame(tax_table(taxsubsctld))
taxdfsctld
physeq.f<-filter_taxa(ps_sctld, function(x) sum(x >= 100) > (0.01*length(x)), prune = TRUE) #filter out super small numbers
?filter_taxa
ps1<-merge_samples(physeq.f,"Experiment") #avg data and combine so that there is 1 avg'd value for each progression point, fill in with what your x-axis is if you want 1 value for each unique type
o<-otu_table(ps1) #make otu table
physeq.f.ra <- transform_sample_counts(o, function(x) x*100/sum(x)) #transform to relative abundance from raw abundance
rowSums(otu_table(physeq.f.ra)) #making sure it worked by getting the sums of each row, should all be 100
propData <- as.data.frame((otu_table(physeq.f.ra))) #make relative abundance otu into a dataframe
sig.ra<-propData[,colnames(propData) %in% dif.abund.tax.sctld$taxa_id] #subset relative abundance so it only includes the significant otus
sig.ra <- cbind(data.frame(rownames(physeq.f.ra)),sig.ra) #add in progression names (or whatever you chose to merge_samples() by)
sig.ra #checking it works
sig.ra$rownames.physeq.f.ra.<-as.factor(sig.ra$rownames.physeq.f.ra.) #making sure/setting progression to(or whatever you chose to merge_samples() by) the factor format, R freaks out otherwise
pcm = melt(sig.ra, id = c("rownames.physeq.f.ra.")) #convert data frame from a "wide" format to a "long" format
length(levels(factor(pcm$rownames.physeq.f.ra.))) #check the length of what you want to set the colors by, in this case Progression, can set to anything in your data
colors <- c("red","yellow","green","cyan","black","red3","yellow3","green3","cyan3") #make list of R colors (be careful to spell and capitalize the way R does for its built in colors), should be the same amount as the number from line of code above
names(colors)<-levels(factor(pcm$rownames.physeq.f.ra.)) #set colors to their associated variable levels (i.e. control05, diseased05, etc.)
colors #checking it worked
pcm$rownames.physeq.f.ra. <- factor(pcm$rownames.physeq.f.ra.,levels=unique(pcm$rownames.physeq.f.ra.)) #should be set to whatever you merge_samples() by
xx2 = ggplot(pcm, aes(x = rownames.physeq.f.ra., y = variable,fill=rownames.physeq.f.ra.)) + geom_point(aes(size = as.numeric(value)), alpha = 0.75, shape = 21) + scale_fill_manual(values = colors,limits = levels(pcm$rownames.physeq.f.ra.)) + scale_size_continuous(limits = c(0.000001, 100), range = c(.5,10), breaks = c(1,25,50,75)) +  labs( x= "", y = "", size = "Abundance", fill = "")  +  theme(legend.key=element_blank(), axis.text.x = element_text(colour = "black", size = 12, face = "bold", angle = 90, vjust = 0.3, hjust = 1), axis.text.y = element_text(colour = "black", face = "bold", size = 11), legend.text = element_text(size = 10, face ="bold", colour ="black"), legend.title = element_text(size = 12, face = "bold"), panel.background = element_blank(), panel.border = element_rect(colour = "black", fill = NA, size = 1.2), legend.position = "right") + scale_y_discrete(limits = rev(levels(pcm$variable))) + ggtitle("Ofav Mcav Significant Taxa") + theme(axis.text.y = element_blank()) #making graph, be sure to go through and change anything whose name changed from what it originally was in this code
xx2 #print plot
#ggsave("bubbleplotofav.png", plot = xx2, width = 15, height = 15, units = "cm", dpi = 300) #save plot, if too squished (i.e. bubbles overlapping etc.) on x axis, then adjust width value, if too squished on y axis then adjust height
physeq.f<-filter_taxa(psofav, function(x) sum(x >= 100) > (0.01*length(x)), prune = TRUE) #filter out super small numbers, psofav is the phyloseq object with all of the ofav-mcav data
ps1<-merge_samples(physeq.f,"Progression") #avg data and combine so that there is 1 avg'd value for each progression point, fill in with what your x-axis is if you want 1 value for each unique type (i.e. 1 for control50 and 1 for diseased50 etc)
physeq.f.ra <- transform_sample_counts(ps1, function(x) x*100/sum(x)) #transform to relative abundance from raw abundance
#data.frame(tax_table(physeq.f.ra))
ps_difabund<-subset_taxa(physeq.f.ra, rownames(tax_table(physeq.f.ra)) %in% dif.abund.tax.ofav$taxa_id)
rowSums(otu_table(physeq.f.ra)) #making sure it worked by getting the sums of each row, should all be 100
physeq.f.ra.ord <- tax_glom(ps_difabund, "Order",NArm=FALSE)
propData <- as.data.frame((otu_table(physeq.f.ra.ord))) #make relative abundance otu into a dataframe
plotDF1 <- propData %>%
rownames_to_column(var="taxa") %>%
melt() %>%
magrittr::set_names(c("sample", "taxa", "relab"))
head(plotDF1)#just checking it worked
taxonomy.2 <- tax_table(physeq.f) %>%
as.data.frame() %>%
rownames_to_column(var="taxa")
head(taxonomy.2)#just checking it worked
head(plotDF1)#just checking it worked
plotDF1 <- left_join(plotDF1, taxonomy.2, by="taxa") %>%
select(taxa, sample, relab, Order) #would need to update here too if you change it.
head(plotDF1)#just checking it worked
sampdata<-data.frame(sample_data(physeq.f))
metadata.2 <- sampdata %>%
rownames_to_column(var="sample")
metadata.2
plotDF1 <- left_join(plotDF1, metadata.2, by="sample")
head(plotDF1)#just checking it worked
length(levels(factor(plotDF1$Order)))
plotDF1$Order<-factor(plotDF1$Order)
plotDF1$sample<-factor(plotDF1$sample)
plotDF1$sample<-as.factor(plotDF1$sample)
#pcm = melt(plotDF1, id = c("rownames.physeq.f.ra.")) #convert data frame from a "wide" format to a "long" format
length(levels(factor(plotDF1$sample))) #check the length of what you want to set the colors by, in this case Progression, can set to anything in your data
colors <- c("red","yellow","green","cyan","black","red3","yellow3","green3","cyan3") #make list of R colors (be careful to spell and capitalize the way R does for its built in colors), should be the same amount as the number from line of code above
names(colors)<-levels(factor(plotDF1$sample)) #set colors to their associated variable levels (i.e. control05, diseased05, etc.)
colors #checking it worked
bubbleorder = ggplot(plotDF1, aes(x = sample, y = Order, fill=sample)) + geom_point(aes(size = as.numeric(relab)), alpha = 0.75, shape = 21) + scale_fill_manual(values = colors,limits = levels(plotDF1$sample)) + scale_size_continuous(limits = c(0.000001, 100), range = c(.5,10), breaks = c(1,25,50,75)) +  labs( x= "", y = "", size = "Abundance", fill = "")  +  theme(legend.key=element_blank(), axis.text.x = element_text(colour = "black", size = 12, face = "bold", angle = 90, vjust = 0.3, hjust = 1), axis.text.y = element_text(colour = "black", face = "bold", size = 8), legend.text = element_text(size = 10, face ="bold", colour ="black"), legend.title = element_text(size = 12, face = "bold"), panel.background = element_blank(), panel.border = element_rect(colour = "black", fill = NA, size = 1.2), legend.position = "right") + scale_y_discrete(limits = rev(levels(plotDF1$Order))) + ggtitle("Ofav Mcav Significant Taxa by Order") #making graph, be sure to go through and change anything whose name changed from what it originally was in this code
bubbleorder #print plot
physeq.f<-filter_taxa(ps_sctld, function(x) sum(x >= 100) > (0.01*length(x)), prune = TRUE) #filter out super small numbers
ps1<-merge_samples(physeq.f,"Experiment") #avg data and combine so that there is 1 avg'd value for each progression point, fill in with what your x-axis is if you want 1 value for each unique type
o<-otu_table(ps1) #make otu table
physeq.f.ra <- transform_sample_counts(o, function(x) x*100/sum(x)) #transform to relative abundance from raw abundance
rowSums(otu_table(physeq.f.ra)) #making sure it worked by getting the sums of each row, should all be 100
propData <- as.data.frame((otu_table(physeq.f.ra))) #make relative abundance otu into a dataframe
sig.ra<-propData[,colnames(propData) %in% dif.abund.tax.sctld$taxa_id] #subset relative abundance so it only includes the significant otus
sig.ra <- cbind(data.frame(rownames(physeq.f.ra)),sig.ra) #add in progression names (or whatever you chose to merge_samples() by)
sig.ra #checking it works
sig.ra$rownames.physeq.f.ra.<-as.factor(sig.ra$rownames.physeq.f.ra.) #making sure/setting progression to(or whatever you chose to merge_samples() by) the factor format, R freaks out otherwise
pcm = melt(sig.ra, id = c("rownames.physeq.f.ra.")) #convert data frame from a "wide" format to a "long" format
length(levels(factor(pcm$rownames.physeq.f.ra.))) #check the length of what you want to set the colors by, in this case Progression, can set to anything in your data
colors <- c("red","yellow","green","cyan","black","red3","yellow3","green3","cyan3") #make list of R colors (be careful to spell and capitalize the way R does for its built in colors), should be the same amount as the number from line of code above
names(colors)<-levels(factor(pcm$rownames.physeq.f.ra.)) #set colors to their associated variable levels (i.e. control05, diseased05, etc.)
colors #checking it worked
pcm$rownames.physeq.f.ra. <- factor(pcm$rownames.physeq.f.ra.,levels=unique(pcm$rownames.physeq.f.ra.)) #should be set to whatever you merge_samples() by
xx2 = ggplot(pcm, aes(x = rownames.physeq.f.ra., y = variable)) + geom_point(aes(size = as.numeric(value)), alpha = 0.75, shape = 21) +  scale_size_continuous(limits = c(0.000001, 100), range = c(.5,10), breaks = c(1,25,50,75)) +  labs( x= "", y = "", size = "Abundance", fill = "")  +  theme(legend.key=element_blank(), axis.text.x = element_text(colour = "black", size = 12, face = "bold", angle = 90, vjust = 0.3, hjust = 1), axis.text.y = element_text(colour = "black", face = "bold", size = 11), legend.text = element_text(size = 10, face ="bold", colour ="black"), legend.title = element_text(size = 12, face = "bold"), panel.background = element_blank(), panel.border = element_rect(colour = "black", fill = NA, size = 1.2), legend.position = "right") + scale_y_discrete(limits = rev(levels(pcm$variable))) + ggtitle("Ofav Mcav vs Mcav Mcav Significant Taxa") + theme(axis.text.y = element_blank()) #making graph, be sure to go through and change anything whose name changed from what it originally was in this code
xx2 #print plot
#ggsave("bubbleplotofav.png", plot = xx2, width = 15, height = 15, units = "cm", dpi = 300) #save plot, if too squished (i.e. bubbles overlapping etc.) on x axis, then adjust width value, if too squished on y axis then adjust height
physeq.f<-filter_taxa(ps_sctld, function(x) sum(x >= 100) > (0.01*length(x)), prune = TRUE) #filter out super small numbers, psofav is the phyloseq object with all of the ofav-mcav data
ps1<-merge_samples(physeq.f,"Experiment") #avg data and combine so that there is 1 avg'd value for each progression point, fill in with what your x-axis is if you want 1 value for each unique type (i.e. 1 for control50 and 1 for diseased50 etc)
physeq.f.ra <- transform_sample_counts(ps1, function(x) x*100/sum(x)) #transform to relative abundance from raw abundance
#data.frame(tax_table(physeq.f.ra))
ps_difabund<-subset_taxa(physeq.f.ra, rownames(tax_table(physeq.f.ra)) %in% dif.abund.tax.sctld$taxa_id)
rowSums(otu_table(physeq.f.ra)) #making sure it worked by getting the sums of each row, should all be 100
physeq.f.ra.ord <- tax_glom(ps_difabund, "Order",NArm=FALSE)
propData <- as.data.frame((otu_table(physeq.f.ra.ord))) #make relative abundance otu into a dataframe
plotDF1 <- propData %>%
rownames_to_column(var="taxa") %>%
melt() %>%
magrittr::set_names(c("sample", "taxa", "relab"))
head(plotDF1)#just checking it worked
taxonomy.2 <- tax_table(physeq.f) %>%
as.data.frame() %>%
rownames_to_column(var="taxa")
head(taxonomy.2)#just checking it worked
head(plotDF1)#just checking it worked
plotDF1 <- left_join(plotDF1, taxonomy.2, by="taxa") %>%
select(taxa, sample, relab, Order) #would need to update here too if you change it.
head(plotDF1)#just checking it worked
sampdata<-data.frame(sample_data(physeq.f))
metadata.2 <- sampdata %>%
rownames_to_column(var="sample")
metadata.2
plotDF1 <- left_join(plotDF1, metadata.2, by="sample")
head(plotDF1)#just checking it worked
length(levels(factor(plotDF1$Order)))
plotDF1$Order<-factor(plotDF1$Order)
plotDF1$sample<-factor(plotDF1$sample)
plotDF1$sample<-as.factor(plotDF1$sample)
#pcm = melt(plotDF1, id = c("rownames.physeq.f.ra.")) #convert data frame from a "wide" format to a "long" format
length(levels(factor(plotDF1$sample))) #check the length of what you want to set the colors by, in this case Progression, can set to anything in your data
bubbleorder = ggplot(plotDF1, aes(x = sample, y = Order)) + geom_point(aes(size = as.numeric(relab)), alpha = 0.75, shape = 21) + scale_size_continuous(limits = c(0.000001, 100), range = c(.5,10), breaks = c(1,25,50,75)) +  labs( x= "", y = "", size = "Abundance", fill = "")  +  theme(legend.key=element_blank(), axis.text.x = element_text(colour = "black", size = 12, face = "bold", angle = 90, vjust = 0.3, hjust = 1), axis.text.y = element_text(colour = "black", face = "bold", size = 8), legend.text = element_text(size = 10, face ="bold", colour ="black"), legend.title = element_text(size = 12, face = "bold"), panel.background = element_blank(), panel.border = element_rect(colour = "black", fill = NA, size = 1.2), legend.position = "right") + scale_y_discrete(limits = rev(levels(plotDF1$Order))) + ggtitle("Ofav Mcav vs Mcav Mcav Significant Taxa by Order") #making graph, be sure to go through and change anything whose name changed from what it originally was in this code
bubbleorder #print plot
physeq.f<-filter_taxa(ps_sctld, function(x) sum(x >= 100) > (0.01*length(x)), prune = TRUE) #filter out super small numbers, psofav is the phyloseq object with all of the ofav-mcav data
ps1<-merge_samples(physeq.f,"Progression") #avg data and combine so that there is 1 avg'd value for each progression point, fill in with what your x-axis is if you want 1 value for each unique type (i.e. 1 for control50 and 1 for diseased50 etc)
physeq.f.ra <- transform_sample_counts(ps1, function(x) x*100/sum(x)) #transform to relative abundance from raw abundance
#data.frame(tax_table(physeq.f.ra))
ps_difabund<-subset_taxa(physeq.f.ra, rownames(tax_table(physeq.f.ra)) %in% dif.abund.tax.sctld$taxa_id)
rowSums(otu_table(physeq.f.ra)) #making sure it worked by getting the sums of each row, should all be 100
physeq.f.ra.ord <- tax_glom(ps_difabund, "Family",NArm=FALSE)
propData <- as.data.frame((otu_table(physeq.f.ra.ord))) #make relative abundance otu into a dataframe
plotDF1 <- propData %>%
rownames_to_column(var="taxa") %>%
melt() %>%
magrittr::set_names(c("sample", "taxa", "relab"))
head(plotDF1)#just checking it worked
taxonomy.2 <- tax_table(physeq.f) %>%
as.data.frame() %>%
rownames_to_column(var="taxa")
head(taxonomy.2)#just checking it worked
head(plotDF1)#just checking it worked
plotDF1 <- left_join(plotDF1, taxonomy.2, by="taxa") %>%
select(taxa, sample, relab, Family) #would need to update here too if you change it.
head(plotDF1)#just checking it worked
sampdata<-data.frame(sample_data(physeq.f))
metadata.2 <- sampdata %>%
rownames_to_column(var="sample")
metadata.2
plotDF1 <- left_join(plotDF1, metadata.2, by="sample")
head(plotDF1)#just checking it worked
length(levels(factor(plotDF1$Family)))
plotDF1$Family<-factor(plotDF1$Family)
plotDF1$sample<-factor(plotDF1$sample)
plotDF1$sample<-as.factor(plotDF1$sample)
bubblefamily = ggplot(plotDF1, aes(x = sample, y = Family)) + geom_point(aes(size = as.numeric(relab)), alpha = 0.75, shape = 21) + scale_size_continuous(limits = c(0.000001, 100), range = c(.5,10), breaks = c(1,25,50,75)) +  labs( x= "", y = "", size = "Abundance", fill = "")  +  theme(legend.key=element_blank(), axis.text.x = element_text(colour = "black", size = 12, face = "bold", angle = 90, vjust = 0.3, hjust = 1), axis.text.y = element_text(colour = "black", face = "bold", size = 6), legend.text = element_text(size = 10, face ="bold", colour ="black"), legend.title = element_text(size = 12, face = "bold"), panel.background = element_blank(), panel.border = element_rect(colour = "black", fill = NA, size = 1.2), legend.position = "right") + scale_y_discrete(limits = rev(levels(plotDF1$Family))) + ggtitle("Ofav Mcav Significant Taxa by Family") #making graph, be sure to go through and change anything whose name changed from what it originally was in this code
bubblefamily #print plot
physeq.f<-filter_taxa(ps_sctld, function(x) sum(x >= 100) > (0.01*length(x)), prune = TRUE) #filter out super small numbers, psofav is the phyloseq object with all of the ofav-mcav data
ps1<-merge_samples(physeq.f,"Experiment") #avg data and combine so that there is 1 avg'd value for each progression point, fill in with what your x-axis is if you want 1 value for each unique type (i.e. 1 for control50 and 1 for diseased50 etc)
physeq.f.ra <- transform_sample_counts(ps1, function(x) x*100/sum(x)) #transform to relative abundance from raw abundance
#data.frame(tax_table(physeq.f.ra))
ps_difabund<-subset_taxa(physeq.f.ra, rownames(tax_table(physeq.f.ra)) %in% dif.abund.tax.sctld$taxa_id)
rowSums(otu_table(physeq.f.ra)) #making sure it worked by getting the sums of each row, should all be 100
physeq.f.ra.ord <- tax_glom(ps_difabund, "Family",NArm=FALSE)
propData <- as.data.frame((otu_table(physeq.f.ra.ord))) #make relative abundance otu into a dataframe
plotDF1 <- propData %>%
rownames_to_column(var="taxa") %>%
melt() %>%
magrittr::set_names(c("sample", "taxa", "relab"))
head(plotDF1)#just checking it worked
taxonomy.2 <- tax_table(physeq.f) %>%
as.data.frame() %>%
rownames_to_column(var="taxa")
head(taxonomy.2)#just checking it worked
head(plotDF1)#just checking it worked
plotDF1 <- left_join(plotDF1, taxonomy.2, by="taxa") %>%
select(taxa, sample, relab, Family) #would need to update here too if you change it.
head(plotDF1)#just checking it worked
sampdata<-data.frame(sample_data(physeq.f))
metadata.2 <- sampdata %>%
rownames_to_column(var="sample")
metadata.2
plotDF1 <- left_join(plotDF1, metadata.2, by="sample")
head(plotDF1)#just checking it worked
length(levels(factor(plotDF1$Family)))
plotDF1$Family<-factor(plotDF1$Family)
plotDF1$sample<-factor(plotDF1$sample)
plotDF1$sample<-as.factor(plotDF1$sample)
bubblefamily = ggplot(plotDF1, aes(x = sample, y = Family)) + geom_point(aes(size = as.numeric(relab)), alpha = 0.75, shape = 21) + scale_size_continuous(limits = c(0.000001, 100), range = c(.5,10), breaks = c(1,25,50,75)) +  labs( x= "", y = "", size = "Abundance", fill = "")  +  theme(legend.key=element_blank(), axis.text.x = element_text(colour = "black", size = 12, face = "bold", angle = 90, vjust = 0.3, hjust = 1), axis.text.y = element_text(colour = "black", face = "bold", size = 6), legend.text = element_text(size = 10, face ="bold", colour ="black"), legend.title = element_text(size = 12, face = "bold"), panel.background = element_blank(), panel.border = element_rect(colour = "black", fill = NA, size = 1.2), legend.position = "right") + scale_y_discrete(limits = rev(levels(plotDF1$Family))) + ggtitle("Ofav Mcav Significant Taxa by Family") #making graph, be sure to go through and change anything whose name changed from what it originally was in this code
bubblefamily #print plot
setwd("~/Mote_Coral_Fall2020/SWG_Scrape_Data")
#library("devtools")
library("ggmap")
library("ARTool")
library("plotrix")
library("sf")
library("rgdal")
library("tidyverse")
library("taxa")
library("phyloseq")
library("ggplot2")
library("vegan")
library("ggpubr")
library("sciplot")
library("multcompView")
library("patchwork")
library("pacman")
library("ggrepel")
library("paletteer")
library("plyr")
library("grid")
library("reshape2")
library("scales")
library("magrittr")
library("ape")
library("RColorBrewer")
library("tidyverse")
library("funrar")
library("nlme")
library("dplyr")
library("compositions")
library("multcompView")
source("ANCOM_funcs.R")
ps_sctld<-readRDS("ps_sctld2.rds")
#change taxa names to ASVs
taxa_names(ps_sctld) <- paste0("ASV", seq(ntaxa(ps_sctld)))
ps_sctld
data.frame(otu_table(ps_sctld))
setwd("~/Mote_Coral_Fall2020/SWG_Scrape_Data")
library("ARTool")
library("plotrix")
library("sf")
library("rgdal")
library("tidyverse")
library("taxa")
library("phyloseq")
library("ggplot2")
library("vegan")
library("ggpubr")
library("sciplot")
library("multcompView")
library("patchwork")
library("pacman")
library("ggrepel")
library("paletteer")
library("plyr")
library("grid")
library("reshape2")
library("scales")
library("magrittr")
library("ape")
library("RColorBrewer")
library("tidyverse")
library("funrar")
library("nlme")
library("dplyr")
library("compositions")
library("multcompView")
source("ANCOM_funcs.R")
ps_sctld<-readRDS("ps_sctld2.rds")
#change taxa names to ASVs
taxa_names(ps_sctld) <- paste0("ASV", seq(ntaxa(ps_sctld)))
ps_sctld
ps_sctldno<-subset_samples(ps_sctld, FragType!="initial")
ps<-subset_samples(ps_sctld,Experiment=="Mcav.Mcav")
sample_data(ps) #just checking it works
psofav <- subset_samples(ps_sctld,Experiment=="Ofav.Mcav")
psinit <- subset_samples(ps_sctld,FragType=="initial")
pmcontrol<-subset_samples(ps,FragType=="Control"|FragType=="initial")
pocontrol<-subset_samples(psofav,FragType=="Control"|FragType=="initial")
pmdiseased<-subset_samples(ps,FragType!="Control"|FragType=="initial")
podiseased<-subset_samples(psofav,FragType!="Control"|FragType=="initial")
pminit<-subset_samples(ps,prog.point=="initial")
pm5<-subset_samples(ps,prog.point=="5")
pm25<-subset_samples(ps,prog.point=="25")
pm50<-subset_samples(ps,prog.point=="50")
pm75<-subset_samples(ps,prog.point=="75")
poinit<-subset_samples(psofav,prog.point=="initial")
po5<-subset_samples(psofav,prog.point=="5")
po25<-subset_samples(psofav,prog.point=="25")
po50<-subset_samples(psofav,prog.point=="50")
po75<-subset_samples(psofav,prog.point=="75")
mcmds <- plot_ordination(ps, ordinate(ps, "NMDS","bray", autotransform = FALSE, parallel = 48, trymax = 10^4, maxit = 10^4), color = "Progression",shape = "FragType") + geom_point(size=2) + ggtitle(title) + theme_set(theme_bw())
print(pMDS)+stat_ellipse(aes(fill=prog.point))
psno<-subset_samples(ps, FragType!="initial")
psofavno<-subset_samples(psofav,FragType!="initial")
mcmds <- plot_ordination(psno, ordinate(ps, "NMDS","bray", autotransform = FALSE, parallel = 48, trymax = 10^4, maxit = 10^4), color = "prog.point",shape = "FragType") + geom_point(size=2) + ggtitle(title) + theme_set(theme_bw())
print(pMDS)+stat_ellipse(aes(fill=prog.point))
print(mcmds)+stat_ellipse(aes(fill=prog.point))
print(mcmds)
mcmds
mcmds <- plot_ordination(psno, ordinate(ps, "NMDS","bray", autotransform = FALSE, parallel = 48, trymax = 10^4, maxit = 10^4), color = "prog.point") + geom_point(size=2) + ggtitle(title) + theme_set(theme_bw())
print(mcmds)+stat_ellipse(aes(fill=prog.point))
setwd("~/Mote_Coral_Fall2020/SWG_Scrape_Data")
library("ARTool")
setwd("~/Mote_Coral_Fall2020/microbes_pipeline")
df = as(sample_data(ps), "data.frame") #you need to convert it to a dataframe first
d = phyloseq::distance(ps, "bray") #convert abundance to bray curtis distances
ps <- readRDS("examplePhyloseq.rds") #import the .rds phyloseq object made in the intro to phyloseq notebook
ps #confirm it worked
df = as(sample_data(ps), "data.frame") #you need to convert it to a dataframe first
setwd("~/Mote_Coral_Fall2020/microbes_pipeline")
library(phyloseq)
library(ggplot2)
library(vegan)
library(multcompView)
#... add any other standard packages.
df = as(sample_data(ps), "data.frame") #you need to convert it to a dataframe first
d = phyloseq::distance(ps, "bray") #convert abundance to bray curtis distances
df$Region <- as.factor(df$Region) #the recent R update has trouble with assigning proper formats to variables so this sets it as a factor (the proper format)
PERMANOVA <- adonis(d ~ Region, df) #run the permanova by region
PERMANOVA
